/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

	compile (
		'org.slf4j:slf4j-api:1.7.25'
		, 'org.slf4j:jcl-over-slf4j:1.7.25'
		, 'ch.qos.logback:logback-classic:1.2.3'
		, 'ch.qos.logback:logback-core:1.2.3'
	)
	
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-eureka-server
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-eureka-server', version: '1.4.6.RELEASE'
	
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-config-server
	compile group: 'org.springframework.cloud', name: 'spring-cloud-config-server', version: '1.4.5.RELEASE'
	
	
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.8.RELEASE'
}

